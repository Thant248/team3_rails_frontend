version: '3'
services:
  redis:
    container_name: rails-frontend-redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_volume:/data
    # command: redis-server --appendonly yes --requirepass r1e2d3is

  web:
    container_name: rails-frontend
    build: .
    # tmp/pids/server.pidが残ってたら `A server is already running. ~~` のエラーでrailsを起動できないので事前に消してから、`rails sever` する
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    # command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails dev:cache -p 3000 -b '0.0.0.0'"
    # 上記のdbイメージで指定したユーザー名とパスワードをrails側でも指定するため環境変数に設定。
    environment:
      RAILS_ENV: $FRONTEND_ENV
      EDITOR: vim
      REDIS_URL: redis://redis:6379/0
    # ホストのカレントディレクトリ(.)とイメージ内の/myappディレクトリを同期させている
    volumes:
      - .:/app
    ports:
      - 80:3000
    # restart: always # コンテナが停止すると常に再起動
    tty: true # 疑似ターミナル (pseudo-TTY) を割り当て。https://docs.docker.jp/compose/compose-file/index.html#tty
    stdin_open: true # サービス コンテナに標準入力を割り当てて実行するよう設定(https://docs.docker.jp/compose/compose-file/index.html#stdin-open)。
    depends_on:
      - redis
volumes:
  redis_volume: